-- imports are relative to the project root (the folder of the first parsed file)
import "devsrc" -- imports all declarations from devsrc
import "devsrc" (sum_, upto_, _+_) -- imports only the given names from devsrc

-- Line comment
-- Function declaration with parsing priority
-- the ':|' is a constraint on the arguments (gets typechecked)
-- the priority thingy is optional, if it is left away a default value (1) gets used
-- functions can also choose an associativity (L or R, default is L)
::[1R] a:Int '+' b:Int -> res:Int
:| a > 0
:| b > 0
:= result <- intAdd a b
   result

-- Type declaration
<>[2] '[' t:* ']'
<| t != Char
<= t ':' ([ t ])
<=| t == Bool
<= '[]'

-- Existential type
E> 'Functor' f:(* -> *)
E= 'map' g:(a -> b) o:(f a) -> f b

-- Existential type instances
E: Functor [_] {
  :: 'map' g:(a -> b) o:([ a ]) -> [ b ]
  := case o of
    Cons x other => Cons (g x) (map g other)
    Nil => Nil
}

-- a
--   b
--     c
-- -> (a (b c))
--
-- a
--   b
--   c
-- -> (a b c)
--
-- a
-- b
-- -> Illegal
--
-- v <- a
-- b
-- -> Legal, binding
